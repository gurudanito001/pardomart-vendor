/* tslint:disable */
/* eslint-disable */
/**
 * PardoMart Node API
 * API documentation for the PardoMart Node.js application.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pardomart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CartItem } from './cart-item';
// May contain unused imports in some cases
// @ts-ignore
import type { DeliveryAddress } from './delivery-address';
// May contain unused imports in some cases
// @ts-ignore
import type { DeliveryMethod } from './delivery-method';
// May contain unused imports in some cases
// @ts-ignore
import type { OrderStatus } from './order-status';
// May contain unused imports in some cases
// @ts-ignore
import type { PaymentMethods } from './payment-methods';
// May contain unused imports in some cases
// @ts-ignore
import type { ShoppingMethod } from './shopping-method';
// May contain unused imports in some cases
// @ts-ignore
import type { User } from './user';
// May contain unused imports in some cases
// @ts-ignore
import type { Vendor } from './vendor';

export interface Order {
    'id'?: string;
    'userId'?: string;
    'vendorId'?: string;
    'totalAmount'?: number;
    'deliveryFee'?: number | null;
    'serviceFee'?: number | null;
    'shoppingFee'?: number | null;
    'paymentMethod'?: PaymentMethods;
    'paymentStatus'?: OrderPaymentStatusEnum;
    'orderStatus'?: OrderStatus;
    'deliveryAddressId'?: string | null;
    'deliveryInstructions'?: string | null;
    'shoppingMethod'?: ShoppingMethod;
    'deliveryMethod'?: DeliveryMethod;
    'scheduledShoppingStartTime'?: string | null;
    'shoppingHandlerId'?: string | null;
    'deliveryPersonId'?: string | null;
    'reasonForDecline'?: string | null;
    'createdAt'?: string;
    'updatedAt'?: string;
    'orderItems'?: Array<CartItem>;
    'user'?: User;
    'vendor'?: Vendor;
    'deliveryAddress'?: DeliveryAddress;
    'shopper'?: User;
    'deliverer'?: User;
}

export const OrderPaymentStatusEnum = {
    Pending: 'pending',
    Paid: 'paid',
    Failed: 'failed'
} as const;

export type OrderPaymentStatusEnum = typeof OrderPaymentStatusEnum[keyof typeof OrderPaymentStatusEnum];


